# Generated by Django 3.2.5 on 2021-07-20 18:40

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ContactUs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cont_nombre', models.CharField(max_length=100, verbose_name='Nombre')),
                ('correo_proveedor', models.EmailField(max_length=50, unique=True, verbose_name='E-mail de contacto')),
                ('cont_asunto', models.CharField(max_length=500, verbose_name='Asunto')),
                ('cont_mensaje', models.TextField(max_length=2000, verbose_name='Asunto')),
            ],
            options={
                'verbose_name': 'Usuario en contacto',
                'verbose_name_plural': 'Usuarios en contacto',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='CronoForm',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombCli', models.CharField(max_length=50, verbose_name='Nombre cliente')),
                ('fecharec', models.CharField(max_length=100, verbose_name='Fecha de recibo')),
                ('tipoped', models.CharField(choices=[('Prenda(s)', 'Prenda(s)'), ('Colección', 'Colección'), ('Modificación', 'Modificación'), ('Reparación', 'Reparación')], max_length=100, unique=True, verbose_name='Tipo de pedido')),
                ('fechaLiEn', models.CharField(blank=True, max_length=100, verbose_name='Fecha de limite de entrega')),
                ('lugarEntr', models.CharField(max_length=200, verbose_name='Lugar de entrega')),
                ('medentr', models.CharField(choices=[('Correo', 'Correo'), ('Fábrica o local', 'Fábrica o local'), ('Acordar punto y hora', 'Acordar punto y hora')], max_length=100, unique=True, verbose_name='Medio de entrega')),
            ],
            options={
                'verbose_name': 'Cronograma',
                'verbose_name_plural': 'Cronograma',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='InfoClient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nomCli', models.CharField(max_length=50, unique=True, verbose_name='Nombre cliente')),
                ('apeCli', models.CharField(max_length=50, unique=True, verbose_name='Apellido cliente')),
                ('telCli', models.IntegerField(default=0, unique=True, verbose_name='Teléfono cliente')),
                ('celCli', models.IntegerField(default=0, unique=True, verbose_name='celular cliente')),
                ('e_mailCli', models.EmailField(max_length=254, unique=True, verbose_name='E-mail cliente')),
                ('dirCli', models.CharField(max_length=50, verbose_name='Dirección de cliente')),
                ('imgCli', models.ImageField(blank=True, null=True, upload_to='Fotos-Clientes')),
            ],
            options={
                'verbose_name': 'Cliente',
                'verbose_name_plural': 'Clientes',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='InfoGeneClient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('infoTCli', models.TextField(max_length=3000, verbose_name='Info técnica cliente')),
                ('ver_ITC', models.CharField(blank=True, max_length=200, null=True, verbose_name='verificación realizada')),
                ('revP_ITC', models.CharField(blank=True, max_length=200, null=True, verbose_name='Revisar pronto')),
                ('revIM_ITC', models.CharField(blank=True, max_length=200, null=True, verbose_name='Revisar de inmediato')),
                ('tipoCli', models.CharField(choices=[('cliente local', 'cliente local'), ('cliente nacional', 'cliente nacional')], default='cliente local', max_length=100)),
                ('prenda', models.BooleanField(null=True, verbose_name='tipos de prenda')),
                ('estilCli', models.CharField(choices=[('clasico', 'clasico'), ('deportivo', 'deportivo'), ('moderno', 'moderno'), ('oficio', 'oficio'), ('otro', 'otro'), ('ninguno', 'ninguno')], default='ninguno', max_length=100)),
                ('medPag', models.CharField(choices=[('Efectivo', 'Efectivo'), ('Tarjeta', 'Tarjeta'), ('Transferencia', 'Transferencia'), ('Giro', 'Giro')], default='Efectivo', max_length=100)),
            ],
            options={
                'verbose_name': 'Detalle Cliente',
                'verbose_name_plural': 'Detalles Clientes',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='InsRegForm',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo_insumo', models.CharField(choices=[('select_tip', 'Seleccione un tipo de insumo'), ('tela', 'Telas'), ('hilo', 'Hilos y lanas'), ('adorno', 'Adorno y bisutería'), ('accesorio', 'Accesorios, cintas y complementos'), ('herramienta', 'Herramientas e instrumentos'), ('otros', 'Otros')], default='Sel-tip-ins', max_length=30)),
                ('especificacion_insumo', models.TextField(max_length=1500, verbose_name='Tipo, marca y otros')),
                ('estado_insumo', models.CharField(max_length=30, verbose_name='Cantidad o estado')),
                ('costxunid_insumo_costo', models.PositiveIntegerField(default=0)),
                ('costxunid_insumo_unidad', models.CharField(max_length=20, verbose_name='cm, kilos, unidades, etc')),
            ],
            options={
                'verbose_name': 'Registro insumo',
                'verbose_name_plural': 'Registro insumos',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='InsRegProv',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_proveedor', models.CharField(max_length=100, verbose_name='Establecimiento/persona')),
                ('Insumos_proveedor', models.TextField(max_length=2000, verbose_name='Insumos que vende')),
                ('telefono_proveedor', models.IntegerField(default=0, unique=True)),
                ('correo_proveedor', models.EmailField(max_length=50, unique=True, verbose_name='E-mail proveedor')),
                ('ubicacion_proveedor', models.CharField(max_length=50, verbose_name='Dirección de proveedor')),
            ],
            options={
                'verbose_name': 'Registro proveedor',
                'verbose_name_plural': 'Registro proveedores',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom_usu', models.CharField(max_length=100, unique=True, verbose_name='Nombre')),
                ('e_mail', models.EmailField(max_length=254, unique=True, verbose_name='E-mail')),
                ('password', models.CharField(max_length=50, verbose_name='Contraseña')),
                ('conf_password', models.CharField(max_length=50, verbose_name='Confirmar Contraseña')),
                ('show_password', models.BooleanField(default=False)),
                ('security_question', models.CharField(choices=[('select_q', 'Seleccione una pregunta'), ('color', 'Color favorito'), ('food', 'Alimento favorito'), ('pet', 'Mascota de la infancia'), ('admired', 'Persona admirada'), ('book', 'Libro favorito'), ('song', 'Canción favorita')], default='Sel-una-pre', max_length=30)),
                ('security_answer', models.CharField(max_length=50, verbose_name='Respect')),
                ('accept_terms', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Perfil',
                'verbose_name_plural': 'Perfiles',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='RegUsu',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nomComUsu', models.CharField(max_length=100, unique=True, verbose_name='Nombre')),
                ('e_mailUsu', models.EmailField(max_length=254, unique=True, verbose_name='E-mail')),
                ('passwordUsu', models.CharField(max_length=10, verbose_name='Contraseña')),
                ('conf_passwordUsu', models.CharField(max_length=10, verbose_name='Confirmar Contraseña')),
                ('accept_terms', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Registrar usuario',
                'verbose_name_plural': 'Registrar Usuarios',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Todopedido',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numPedido', models.IntegerField(unique=True, verbose_name='Número de pedido')),
                ('pedido', models.CharField(max_length=20, verbose_name='Pedido')),
                ('descri', models.CharField(max_length=20, verbose_name='Descripción')),
                ('client', models.CharField(max_length=20, verbose_name='Cliente')),
                ('fechadEnt', models.CharField(blank=True, max_length=100, verbose_name='Fecha de entrega')),
                ('DeleteAccount', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.profile')),
                ('DeleteClient', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.infoclient')),
            ],
            options={
                'verbose_name': 'Pedido',
                'verbose_name_plural': 'Pedidos',
                'ordering': ['id'],
            },
        ),
        migrations.DeleteModel(
            name='contactar_desarrolladores',
        ),
        migrations.DeleteModel(
            name='editar_usuario',
        ),
        migrations.DeleteModel(
            name='informacion_personal',
        ),
        migrations.DeleteModel(
            name='reportar_error',
        ),
        migrations.AddField(
            model_name='profile',
            name='re_RegyProf',
            field=models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='core.regusu'),
        ),
        migrations.AddField(
            model_name='insregprov',
            name='DeleteAccount',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.profile'),
        ),
        migrations.AddField(
            model_name='insregprov',
            name='DeleteClient',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.infoclient'),
        ),
        migrations.AddField(
            model_name='insregprov',
            name='rel_ProvInsu',
            field=models.ManyToManyField(to='core.InsRegForm'),
        ),
        migrations.AddField(
            model_name='insregform',
            name='DeleteAccount',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.profile'),
        ),
        migrations.AddField(
            model_name='insregform',
            name='DeleteClient',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.infoclient'),
        ),
        migrations.AddField(
            model_name='infogeneclient',
            name='DeleteAccount',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.profile'),
        ),
        migrations.AddField(
            model_name='infogeneclient',
            name='DeleteClient',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.infoclient'),
        ),
        migrations.AddField(
            model_name='infoclient',
            name='DeleteAccount',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.profile'),
        ),
        migrations.AddField(
            model_name='cronoform',
            name='DeleteAccount',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.profile'),
        ),
        migrations.AddField(
            model_name='cronoform',
            name='DeleteClient',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.infoclient'),
        ),
    ]
